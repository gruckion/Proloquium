[csv_processor.py]
```python
"""A module that provides CSV processing functionalities"""

import csv
from typing import List, Dict


class CSVProcessor:
    """A class that provides methods to read input CSV, process it, and generate an output CSV"""

    @staticmethod
    def read_csv(file_path: str) -> List[Dict[str, str]]:
        """
        Read input CSV file and return its contents as a list of dictionaries

        :param file_path: The path of the input CSV file
        :type file_path: str
        :return: A list of dictionaries, where each dictionary represents a row in the input CSV file
        :rtype: list
        """
        with open(file_path, newline="") as csv_file:
            reader = csv.DictReader(csv_file)
            rows = [row for row in reader]
            return rows

    @staticmethod
    def process_csv(rows: List[Dict[str, str]]) -> List[Dict[str, str]]:
        """
        Process the input CSV data and return the processed data as a list of dictionaries

        :param rows: A list of dictionaries, where each dictionary represents a row in the input CSV file
        :type rows: list
        :return: A list of dictionaries, where each dictionary represents a processed row
        :rtype: list
        """
        processed_rows = []
        for row in rows:
            processed_row = {
                "first_name": row["first_name"].capitalize(),
                "last_name": row["last_name"].capitalize(),
                "email": row["email"].lower(),
            }
            processed_rows.append(processed_row)
        return processed_rows

    @staticmethod
    def write_csv(file_path: str, rows: List[Dict[str, str]]) -> None:
        """
        Write the processed CSV data to an output CSV file

        :param file_path: The path of the output CSV file
        :type file_path: str
        :param rows: A list of dictionaries, where each dictionary represents a processed row
        :type rows: list
        """
        with open(file_path, "w", newline="") as csv_file:
            writer = csv.DictWriter(csv_file, fieldnames=["first_name", "last_name", "email"])
            writer.writeheader()
            writer.writerows(rows)
```