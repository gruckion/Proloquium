[csv_processor.py]
```python
"""A module that provides CSV input and output functionality."""

import csv
from typing import List, Union


class CSVProcessor:
    """A class that handles CSV processing tasks."""

    @staticmethod
    def read_csv(file_path: str) -> List[dict]:
        """
        Reads a CSV file and returns a list of dictionaries containing the data.

        :param file_path: A string representing the file path of the CSV file.
        :return: A list of dictionaries containing the data from the CSV file.
        """
        with open(file_path, "r") as file:
            return list(csv.DictReader(file))

    @staticmethod
    def write_csv(file_path: str, data: Union[List[dict], dict]):
        """
        Writes a list of dictionaries or a dictionary to a CSV file.

        :param file_path: A string representing the file path of the CSV file.
        :param data: A list of dictionaries or a dictionary containing the data to be written.
        """
        with open(file_path, "w", newline="") as file:
            writer = csv.DictWriter(file, fieldnames=data[0].keys() if isinstance(data, list) else data.keys())
            writer.writeheader()
            if isinstance(data, list):
                writer.writerows(data)
            else:
                writer.writerow(data)
```