[csv_processor.py]
```python
"""This module defines CSVProcessor class to read input CSV, process it, and generate an output CSV."""

import csv
from typing import Any, List


class CSVProcessor:
    """CSVProcessor class provides methods to read input CSV, process it, and generate an output CSV."""

    def __init__(self, input_file: str, output_file: str, header: List[str]):
        """
        Initialize CSVProcessor object.

        :param input_file: path to input CSV file.
        :param output_file: path to output CSV file.
        :param header: list of header fields for output CSV file.
        """
        self.input_file = input_file
        self.output_file = output_file
        self.header = header

    def read_input_csv(self) -> List[List[Any]]:
        """
        Read input CSV file and return its content as a list of rows.

        :return: list of rows.
        """
        with open(self.input_file) as input_csv_file:
            csv_reader = csv.reader(input_csv_file, delimiter=",")
            rows = [row for row in csv_reader]
            return rows

    def process_csv(self, rows: List[List[Any]]) -> List[List[Any]]:
        """
        Process input CSV data and return processed data as a list of rows.

        :param rows: list of rows to be processed.
        :return: processed data as a list of rows.
        """
        processed_rows = []
        for row in rows:
            # Example processing task
            processed_row = [cell.upper() for cell in row]
            processed_rows.append(processed_row)
        return processed_rows

    def write_output_csv(self, rows: List[List[Any]]):
        """
        Write processed data to output CSV file.

        :param rows: list of rows to be written to CSV file.
        """
        with open(self.output_file, mode="w") as output_csv_file:
            csv_writer = csv.writer(output_csv_file)
            csv_writer.writerow(self.header)
            csv_writer.writerows(rows)
```